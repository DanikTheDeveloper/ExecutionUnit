library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity srl_entity is
    Generic ( N : natural := 64 );
    Port (
        A     : in  std_logic_vector(N-1 downto 0);
        B     : in  std_logic_vector(N-1 downto 0);
        Result: out std_logic_vector(N-1 downto 0)
    );
end entity srl_entity;

architecture behavioral of srl_entity is
    signal Atemp : std_logic_vector(N-1 downto 0);
    signal shift_amount : integer range 0 to N-1;
    signal zeros : std_logic_vector(N-1 downto 0);
begin
    zeros <= (others => '0');

    process(A, B)
    begin
        -- Initialize Atemp to A
        Atemp <= A;

        -- Shift logic
        for i in N-1 downto 0 loop
            if B(i) = '1' then
                -- Logical right shift (append zeros on the left)
                Atemp <= zeros(N-1 downto i) & Atemp(N-1 downto i);
            end if;
        end loop;
        
        -- Output the shifted result
        Result <= Atemp;
    end process;
end architecture behavioral;
